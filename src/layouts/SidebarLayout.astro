---
import { pagesConfigA, pagesConfigB } from '../config/pages';
import Actiontest from '@components/menu/actiontest.astro';
import UserLogin from '@components/user/userLogin.astro';
import Dialog from '@components/Dialog.astro'
import {DialogManagerSolid} from '@components/DialogManagerSolid.tsx';
interface Props {
  title?: string;
  activeConfig?: 'A' | 'B';
}
const urlbase = import.meta.env.BASE_URL.endsWith("/") ? import.meta.env.BASE_URL : `${import.meta.env.BASE_URL}/`;
const base = urlbase;
const { title = "Default Title", activeConfig = 'A' } = Astro.props;
const currentConfig = activeConfig === 'A' ? pagesConfigA : pagesConfigB;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="./favicon.svg" />

    <!-- REMOVE Font Awesome -->
    <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" /> -->

    <!-- ADD Material Symbols (usando tu CSS local o el CDN de Google) -->
    <!-- Opción 1: Usando tu CSS local (asegúrate que esté bien configurado) -->
    <link rel="stylesheet" href={`${base}materialSymbols.css`}>
    <!-- Descomenta esta línea si prefieres el CDN y comenta la anterior -->
    <!-- <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" /> -->

    <meta name="color-scheme" content="light dark" /> {/* Important for auto-theming */}
    <script src="/src/litcomponents/init"></script>
    <script src="/src/components/actionsjs/evalue.js"></script>
    <script src="https://code.responsivevoice.org/responsivevoice.js?key=VyUT4i1M" is:inline></script>
    <title>{title}</title>
  </head>
  <body>
    

    {/* Main Layout */}
    <div class="layout">
      {/* Mobile Navbar */}
      <nav class="mobile-nav">
        <div class="nav-content">
          <div class="login-mobile">
            <UserLogin
            ></UserLogin>
          </div>
          <div class="nav-buttons">
            {
              Object.entries(currentConfig).map(([key, page]) => (
                // CAMBIO IMPORTANTE AQUÍ:
                // page.slot NO debe empezar con '/' si vas a concatenar con 'base'
                // base ya tiene el '/' al final (ej: '/multistreamASTRO/')
                // si page.slot es "chat", el resultado es "/multistreamASTRO/chat"
                // si page.slot es "", el resultado es "/multistreamASTRO/" (para la home de la base)
                <a href={`${base}${page.slot}`} class="nav-link">
                  <span class="material-symbols-outlined">{page.icon}</span>
                  <span class="nav-text">{page.name}</span>
                </a>
              ))
            }
          </div>

          <div class="logo">
            <slot name="logo" />
          </div>
        </div>
      </nav>

      {/* Desktop Sidebar */}
      <aside class="sidebar">
        <div class="sidebar-content">
          <div class="logo">
            <slot name="logo" />
          </div>
          <div class="login-desktop relative">
            <UserLogin
            ></UserLogin>
          </div>
          <div class="nav-buttons">
           {
              Object.entries(currentConfig).map(([key, page]) => (
                // CAMBIO IMPORTANTE AQUÍ (igual que arriba):
                <a href={`${base}${page.slot}`} class="nav-link">
                  <span class="material-symbols-outlined">{page.icon}</span>
                  <span class="nav-text">{page.name}</span>
                </a>
              ))
            }
          </div>

        </div>
      </aside>

      {/* Main Content */}
      <main class="main-content">
        <slot />
      </main>
      <button class="float-btn" id="MainModalshow">
        <span class="material-symbols-outlined">
          view_headline
        </span>
      </button>
    </div>
    <script>
      import { DialogContainer } from "src/litcomponents/custom-modal";
      const ActionDialog = document.getElementById('ActionDialog') as DialogContainer;
      const MainModalshow = document.getElementById('MainModalshow');
      function listenerModalMenu(){
        if (!MainModalshow) return;
        if (!ActionDialog) return;
        MainModalshow.addEventListener('click', () => {
          ActionDialog.show();
        });
      }
      document.addEventListener('DOMContentLoaded', () => {
        listenerModalMenu();
      });

    </script>
        <dialog-container id="ActionDialog">
          <div class="modal__container">
            <Actiontest/>
          </div>
        </dialog-container>
        <Dialog></Dialog>
        <DialogManagerSolid client:only="solid-js"/>
  </body>
</html>

<style is:global>
  @import '../assets/global.css';
  .hidden {
    display: none !important;
  }
</style>